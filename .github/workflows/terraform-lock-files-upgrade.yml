---
name: Upgrade for Terraform lock files
on:
  workflow_call:
    inputs:
      terraform-or-terragrunt-working-directories:
        required: false
        type: string
        description: Working directories for Terraform or Terragrunt (separated by spaces or returns)
        default: .
      terraform-version:
        required: false
        type: string
        description: Terraform version to use
        default: latest
      terragrunt-version:
        required: false
        type: string
        description: Terragrunt version to use
        default: null
      runs-on:
        required: false
        type: string
        description: GitHub Actions runner to use
        default: ubuntu-latest
permissions:
  contents: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  upgrade-and-commit:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Install Terragrunt
        if: inputs.terragrunt-version != null
        env:
          TERRAGRUNT_VERSION: ${{ inputs.terragrunt-version }}
        run: |
          arch_type="$(uname -s | tr '[:upper:]' '[:lower:]')_$([[ "$(uname -m)" == 'x86_64' ]] && echo 'amd64' || echo 'arm64')"
          if [[ "${TERRAGRUNT_VERSION}" == 'latest' ]]; then
            curl -sSL https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest \
              | jq -r ".assets[] | select(.name | endswith(\"${arch_type}\")) | .browser_download_url" \
              | xargs -t curl -sSL -o /usr/local/bin/terragrunt
          else
            curl -sSL -o /usr/local/bin/terragrunt \
              "https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_${arch_type}"
          fi
          chmod +x /usr/local/bin/terragrunt
      - name: Upgrade Terraform lock files
        run: |
          if [[ -n '${{ inputs.terragrunt-version }}' ]]; then
            cmd="terragrunt run-all init --terragrunt-working-directory='{}' -upgrade -reconfigure -backend=false"
          else
            cmd="terraform -chdir='{}' init -upgrade -reconfigure -backend=false"
          fi
          echo '${{ inputs.terraform-or-terragrunt-working-directories }}' \
            | tr ' ' '\n' \
            | xargs -I{} -t bash -c "${cmd}"
      - name: Commit and push the changes
        uses: EndBug/add-and-commit@v9
        with:
          add: .
          message: Upgrade Terraform lock files
          push: true
