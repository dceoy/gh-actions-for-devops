---
name: Upgrade for Terraform lock files
on:
  workflow_call:
    inputs:
      terraform-working-directories:
        required: false
        type: string
        description: Terraform working directories (separated by spaces or returns)
        default: .
      terraform-working-directory-to-version-tf-json:
        required: false
        type: string
        description: JSON object with Terraform working directories as keys and Terraform version files as values
        default: null
      terragrunt-working-directories:
        required: false
        type: string
        description: Terragrunt working directories (separated by spaces or returns)
        default: null
      terraform-version:
        required: false
        type: string
        description: Terraform version to use
        default: latest
      pr-branch-prefix-to-merge:
        required: false
        type: string
        description: Prefix of the branches to merge
        default: dependabot/terraform/
      runs-on:
        required: false
        type: string
        description: GitHub Actions runner to use
        default: ubuntu-latest
permissions:
  contents: write
  pull-requests: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  upgrade-and-commit:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Merge the changes in the open pull request branches
        if: github.event_name == 'pull_request' && inputs.pr-branch-prefix-to-merge != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BRANCH_PREFIX: ${{ inputs.pr-branch-prefix-to-merge }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          HEAD_REF: ${{ github.head_ref }}
        run: |
          git log -1 --pretty=format:'%an' | xargs -t git config user.name
          git log -1 --pretty=format:'%ae' | xargs -t git config user.email
          prs="$( \
            gh pr list --state open --json headRefName,number \
              --jq ".[] | select(.headRefName | startswith(\"${PR_BRANCH_PREFIX}\")).number" \
          )"
          echo "${prs}" | xargs -I{} -t gh pr checkout {} --branch 'pr/{}'
          git switch "pr/${PR_NUMBER}"
          echo "${prs}" \
            | grep -ve "^pr/${PR_NUMBER}$" \
            | xargs -I{} -t git merge --allow-unrelated-histories --no-edit pr/{}
          git switch "${HEAD_REF}"
          git merge --allow-unrelated-histories --no-edit -s recursive -X theirs "pr/${PR_NUMBER}"
      - name: Upgrade Terraform lock files
        env:
          TERRAFORM_LOCK_FILE: .terraform.lock.hcl
          UPDATED_FILES_TXT: /tmp/updated_files.${{ github.run_id }}.txt
        run: |
          if [[ -n '${{ inputs.terraform-working-directory-to-version-tf-json }}' ]]; then
            echo '${{ inputs.terraform-working-directory-to-version-tf-json }}' \
              | jq -r 'to_entries[] | "cp \(.value) \(.key) && cd \(.key) && terraform init -upgrade -reconfigure -backend=false && rm -rf $(basename \(.value)) .terraform"' \
              | xargs -I{} -t bash -c '{}'
            echo '${{ inputs.terraform-working-directory-to-version-tf-json }}' \
              | jq -r 'keys[]' \
              | xargs -I{} find {} -type f -name "${TERRAFORM_LOCK_FILE}" \
              | jq -rRs 'split("\n")[:-1] | "UPDATED_FILES_JSON=\(.)"' \
              | tee -a "${GITHUB_ENV}"
          elif [[ -n '${{ inputs.terragrunt-working-directories }}' ]]; then
            echo '${{ inputs.terragrunt-working-directories }}' \
              | tr ' ' '\n' \
              | xargs -I{} find {} -type f -name "${TERRAFORM_LOCK_FILE}" \
              > "${UPDATED_FILES_TXT}"
            xargs dirname < "${UPDATED_FILES_TXT}" \
              | xargs realpath \
              | xargs -I{} -t bash -c \
                "cd \"{}/../../../modules/\$(basename {})\" && terraform init -upgrade -reconfigure -backend=false && mv ${TERRAFORM_LOCK_FILE} {} && rm -rf .terraform"
            jq -rRs 'split("\n")[:-1] | "UPDATED_FILES_JSON=\(.)"' "${UPDATED_FILES_TXT}" \
              | tee -a "${GITHUB_ENV}"
            rm -f "${UPDATED_FILES_TXT}"
          else
            echo '${{ inputs.terraform-working-directories }}' \
              | tr ' ' '\n' \
              | xargs -I{} -t bash -c 'terraform -chdir={} init -backend=false -upgrade -reconfigure'
            echo '${{ inputs.terraform-working-directories }}' \
              | tr ' ' '\n' \
              | xargs -I{} find {} -type f -name "${TERRAFORM_LOCK_FILE}" \
              | jq -rRs 'split("\n")[:-1] | "UPDATED_FILES_JSON=\(.)"' \
              | tee -a "${GITHUB_ENV}"
          fi
      - name: Commit and push the changes
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ env.UPDATED_FILES_JSON }}
          message: Upgrade Terraform lock files
          push: true
