---
name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:
    inputs:
      workflow:
        required: true
        type: choice
        options:
          - lint
          - analyze
          - build
          - release
        description: Choose the workflow to run
        default: lint
permissions:
  contents: read
jobs:
  go-lint-and-scan:
    if: >
      github.event_name == 'push'
      || github.event_name == 'pull_request'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint')
    uses: ./.github/workflows/go-package-lint-and-scan.yml
    with:
      package-path: .
      go-version: stable
  github-actions-lint-and-scan:
    if: >
      github.event_name == 'push'
      || github.event_name == 'pull_request'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint')
    uses: ./.github/workflows/github-actions-lint-and-scan.yml
    with:
      search-path: .github/workflows
      go-version: stable
      python-version: 3.x
  toml-lint:
    if: >
      github.event_name == 'push'
      || github.event_name == 'pull_request'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint')
    uses: ./.github/workflows/toml-lint.yml
    with:
      search-path: .github/workflows
      go-version: stable
  docker-lint-and-scan:
    if: >
      github.event_name == 'push'
      || github.event_name == 'pull_request'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint')
    uses: ./.github/workflows/docker-lint-and-scan.yml
  docker-build-and-push:
    if: >
      github.event_name == 'workflow_dispatch' && inputs.workflow == 'build'
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/docker-build-and-push.yml
    with:
      registry: ghcr.io
      registry-user: ${{ github.repository_owner }}
      image-name: ${{ github.repository }}
      platforms: linux/amd64,linux/arm64
      context: ./src
      file: ./src/Dockerfile
      push: true
    secrets:
      DOCKER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GHCR_TOKEN }}
  github-codeql-analysis:
    if: >
      github.event_name == 'push'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'analyze')
    permissions:
      actions: read
      contents: read
      security-events: write
    uses: ./.github/workflows/github-codeql-analysis.yml
    with:
      language: >
        ["go"]
  github-release:
    if: >
      github.event_name == 'workflow_dispatch' && inputs.workflow == 'release'
    permissions:
      contents: write
    uses: ./.github/workflows/github-release.yml
    with:
      create-new-tag: false
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  dependabot-auto-merge:
    if: >
      github.event_name == 'pull_request'
      && github.event.pull_request.user.login == 'dependabot[bot]'
    needs:
      - go-lint-and-scan
      - github-actions-lint-and-scan
      - toml-lint
      - docker-lint-and-scan
    permissions:
      contents: write
      pull-requests: write
      actions: read
    uses: ./.github/workflows/dependabot-auto-merge.yml
    with:
      unconditional: true
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  update-readme-md:
    if: >
      github.event_name == 'push'
      || github.event_name == 'pull_request'
      || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
      pull-requests: write
    defaults:
      run:
        shell: bash -euo pipefail {0}
        working-directory: .
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00  # v6.0.0
        with:
          go-version: stable
      - name: Install dependencies
        run: |
          go mod download
      - name: Build the Go program
        env:
          VERSION: ${{ github.ref_name || github.head_ref || 'unknown' }}
        run: |
          go build -ldflags "-X main.version=${VERSION}" -o src/build_readme_md src/build_readme_md.go
      - name: Update README.md
        run: |
          ./src/build_readme_md
      - name: Commit and push the changes
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5  # v9.1.4
        with:
          add: ./README.md
          message: Update README.md
          push: true
