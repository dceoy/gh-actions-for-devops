---
name: Aggregation of open pull request branches
on:
  workflow_call:
    inputs:
      branch-prefix:
        required: false
        type: string
        description: Prefix of the branches to merge (e.g., dependabot/terraform/)
        default: null
      delete-merged-branch:
        required: false
        type: boolean
        description: Delete the merged branches
        default: false
    outputs:
      merged-pr-branches-json:
        description: JSON array of the merged branches
        value: ${{ jobs.branch-list.outputs.pr_branches_json }}
    secrets:
      GH_TOKEN:
        required: false
        description: GitHub token
permissions:
  contents: write
  pull-requests: read
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  branch-list:
    if: >
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      BRANCH_PREFIX: ${{ inputs.branch-prefix }}
      HEAD_REF: ${{ github.head_ref }}
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
    outputs:
      pr_branches_json: ${{ steps.list-open-prs.outputs.pr_branches_json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: List open pull request branches
        id: list-open-prs
        run: |
          gh pr list --state open --json headRefName \
            --jq ".[].headRefName | select(. | startswith(\"${BRANCH_PREFIX}\"))" \
            | tac \
            | jq -rRs "split(\"\\n\")[:-1] | .-[\"${HEAD_REF}\"] | \"pr_branches_json=\\(.)\"" \
            | tee -a "${GITHUB_OUTPUT}"
  branch-merge:
    if: >
      needs.branch-list.outputs.pr_branches_json != '[]'
    needs:
      - branch-list
    runs-on: ubuntu-latest
    env:
      BRANCHES_JSON: ${{ needs.branch-list.outputs.pr_branches_json }}
      HEAD_REF: ${{ github.head_ref }}
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch the remote branches
        run: |
          jq -r '.[]' <<< "${BRANCHES_JSON}" | xargs -t git fetch origin
      - name: Configure the Git user
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
      - name: Merge the branches
        run: |
          jq -r '.[]' <<< "${BRANCHES_JSON}" | xargs -I{} -t git merge --no-edit origin/{}
      - name: Push the changes
        run: |
          git push origin "HEAD:${HEAD_REF}"
      - name: Delete the merged branches
        if: inputs.delete-merged-branch
        run: |
          jq -r '.[]' <<< "${BRANCHES_JSON}" | xargs -t git push origin --delete
