---
name: Release on GitHub
on:
  workflow_call:
    inputs:
      tag-name:
        required: false
        type: string
        description: Git tag to create a release for
        default: null
      create-new-tag:
        required: false
        type: boolean
        description: Create a new tag if the input tag does not exist
        default: false
  workflow_dispatch:
    inputs:
      tag-name:
        required: false
        type: string
        description: Git tag to create a release for
        default: null
      create-new-tag:
        required: false
        type: boolean
        description: Create a new tag if the input tag does not exist
        default: false
permissions:
  contents: write  # IMPORTANT: mandatory for making GitHub Releases
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  github-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Validate the consistency
        if: >
          startsWith(github.ref, 'refs/tags/') && inputs.tag-name != null
          && github.ref_name != inputs.tag-name
        run: >
          echo 'Invalid input tag: ${{ inputs.tag-name }} != ${{ github.ref_name }}'
          && exit 1
      - name: Validate the input tag
        if: >
          (! startsWith(github.ref, 'refs/tags/')) && inputs.tag-name == null
        run: >
          echo 'An input tag is required for non-tag events' && exit 2
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create the GitHub release for the tag
        if: >
          startsWith(github.ref, 'refs/tags/')
          || ((! startsWith(github.ref, 'refs/tags/')) && ! inputs.create-new-tag)
        run: >
          gh release create '${{ github.ref_name }}'
          --repo '${{ github.repository }}' --generate-notes --verify-tag
      - name: Create the GitHub release for the tag
        if: >
          (! startsWith(github.ref, 'refs/tags/')) && inputs.create-new-tag
        run: >
          gh release create '${{ inputs.tag-name }}'
          --repo '${{ github.repository }}' --generate-notes
