---
name: Formatting for Terraform
on:
  workflow_call:
    inputs:
      search-path:
        required: false
        type: string
        description: Path to search for files
        default: .
      terraform-version:
        required: false
        type: string
        description: Terraform version to use
        default: latest
      lint-before-pr:
        required: false
        type: boolean
        description: Run lint before creating a pull request
        default: true
      terragrunt-version:
        required: false
        type: string
        description: Terragrunt version to use
        default: null
      runs-on:
        required: false
        type: string
        description: GitHub Actions runner to use
        default: ubuntu-latest
    secrets:
      GH_TOKEN:
        required: false
        description: GitHub token
permissions:
  contents: write
  pull-requests: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  format-and-pr:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest
      - name: Install Terragrunt
        if: inputs.terragrunt-version != null
        env:
          TERRAGRUNT_VERSION: ${{ inputs.terragrunt-version }}
        run: |
          arch_type="$(uname -s | tr '[:upper:]' '[:lower:]')_$([[ "$(uname -m)" == 'x86_64' ]] && echo 'amd64' || echo 'arm64')"
          if [[ "${TERRAGRUNT_VERSION}" == 'latest' ]]; then
            curl -sSL https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest \
              | jq -r ".assets[] | select(.name | endswith(\"${arch_type}\")) | .browser_download_url" \
              | xargs -t curl -sSL -o /usr/local/bin/terragrunt
          else
            curl -sSL -o /usr/local/bin/terragrunt \
              "https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_${arch_type}"
          fi
          chmod +x /usr/local/bin/terragrunt
      - name: Format the code using terraform fmt
        env:
          SEARCH_PATH: ${{ inputs.search-path }}
        run: |
          terraform fmt -recursive "${SEARCH_PATH}"
      - name: Format the code using terragrunt hclfmt
        if: inputs.terragrunt-version != null
        env:
          SEARCH_PATH: ${{ inputs.search-path }}
        run: |
          terragrunt hclfmt --terragrunt-diff --terragrunt-working-dir="${SEARCH_PATH}"
      - name: Lint the code using TFLint
        if: inputs.lint-before-pr
        env:
          SEARCH_PATH: ${{ inputs.search-path }}
        run: |
          tflint --recursive --filter "${SEARCH_PATH}"
      - name: Create output parameters
        id: parameters
        env:
          PR_BASE: ${{ github.head_ref || github.ref_name }}
          TERRAGRUNT_VERSION: ${{ inputs.terragrunt-version }}
        run: |
          if [[ -n "${TERRAGRUNT_VERSION}" ]]; then
            formatters='terraform and terragrunt'
          else
            formatters='terraform'
          fi
          {
            echo "commit_message=Reformat HCL code using ${formatters}"
            echo "pr_base=${PR_BASE}"
            echo "pr_branch=automatedpr/${PR_BASE}"
          } >> "${GITHUB_OUTPUT}"
      - name: Detect changed files and create a pull request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          commit-message: ${{ steps.parameters.outputs.commit_message }}
          title: ${{ steps.parameters.outputs.commit_message }}
          branch: ${{ steps.parameters.outputs.pr_branch }}
          base: ${{ steps.parameters.outputs.pr_base }}
          labels: automated pr
          body: |
            This PR contains the following updates:

            - ${{ steps.parameters.outputs.commit_message }}

            This PR has been generated by
            [${{ github.workflow_ref }}](https://github.com/${{ github.repository }}/).
          delete-branch: true
          draft: false
