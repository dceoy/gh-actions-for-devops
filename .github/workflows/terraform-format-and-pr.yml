---
name: Formatter for Terraform
on:
  workflow_call:
    inputs:
      search-path:
        required: false
        type: string
        description: Path to search for files
        default: .
      terraform-version:
        required: false
        type: string
        description: Terraform version to use
        default: latest
      lint-before-pr:
        required: false
        type: boolean
        description: Run lint before creating a pull request
        default: true
      terragrunt-version:
        required: false
        type: string
        description: Terragrunt version to use
        default: null
permissions:
  contents: write
  pull-requests: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  format-and-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Install tflint
        if: inputs.lint-before-pr
        run: |
          curl -sSL https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - name: Install Terragrunt
        if: inputs.terragrunt-version != null
        env:
          TERRAGRUNT_VERSION: ${{ inputs.terragrunt-version }}
        run: |
          if [[ "${TERRAGRUNT_VERSION}" == 'latest' ]]; then
            curl -sSL https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest \
              | jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url' \
              | xargs -t curl -sSL -o /usr/local/bin/terragrunt
          else
            curl -sSL -o /usr/local/bin/terragrunt \
              https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          fi
          chmod +x /usr/local/bin/terragrunt
      - name: Format the code using terraform fmt
        run: |
          terraform fmt -recursive ${{ inputs.search-path }}
      - name: Format the code using terragrunt hclfmt
        if: inputs.terragrunt-version != null
        run: |
          terragrunt hclfmt --terragrunt-diff --terragrunt-working-dir ${{ inputs.search-path }}
      - name: Lint the code using tflint
        if: inputs.lint-before-pr
        run: |
          tflint --recursive --filter ${{ inputs.search-path }}
      - name: Create output parameters
        id: parameters
        run: |
          if [[ -n "${{ inputs.terragrunt-version }}" ]]; then
            formatters='terraform and terragrunt'
          else
            formatters='terraform'
          fi
          if [[ -n "${{ github.head_ref }}" ]]; then
            pr_branch="automatedpr/${{ github.head_ref }}"
            pr_base="${{ github.head_ref }}"
          else
            pr_branch="automatedpr/${{ github.ref_name }}"
            pr_base="${{ github.ref_name }}"
          fi
          echo "COMMIT_MESSAGE=Reformat HCL code using ${formatters}" >> "${GITHUB_OUTPUT}"
          echo "PR_BRANCH=${pr_branch}" >> "${GITHUB_OUTPUT}"
          echo "PR_BASE=${pr_base}" >> "${GITHUB_OUTPUT}"
      - name: Detect changed files and create a pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ${{ steps.parameters.outputs.COMMIT_MESSAGE }}
          title: ${{ steps.parameters.outputs.COMMIT_MESSAGE }}
          branch: ${{ steps.parameters.outputs.PR_BRANCH }}
          base: ${{ steps.parameters.outputs.PR_BASE }}
          labels: automated pr
          body: |
            This PR contains the following updates:

            - ${{ steps.parameters.outputs.COMMIT_MESSAGE }}

            This PR has been generated by
            [${{ github.workflow_ref }}](https://github.com/${{ github.repository }}/).
          delete-branch: true
          draft: false
