---
name: Lint and security scan for Go
on:
  workflow_call:
    inputs:
      package-path:
        required: false
        type: string
        description: Path to a Go package or project
        default: .
      go-version:
        required: false
        type: string
        description: Go version to use
        default: stable
      use-gosec:
        required: false
        type: boolean
        description: Use gosec for security scanning
        default: true
      use-govulncheck:
        required: false
        type: boolean
        description: Use govulncheck for vulnerability scanning
        default: true
      runs-on:
        required: false
        type: string
        description: GitHub Actions runner to use
        default: ubuntu-latest
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  lint-and-scan:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.2.0
        with:
          go-version: ${{ inputs.go-version }}
          cache: true
      - name: Verify Go installation
        working-directory: ${{ inputs.package-path }}
        run: |
          go version
          if [[ -f go.mod ]]; then
            echo "Found go.mod file"
            go mod download
            go mod verify
          else
            echo "No go.mod file found"
          fi
      - name: Install golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest
      - name: Install gosec
        if: inputs.use-gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
      - name: Install govulncheck
        if: inputs.use-govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run golangci-lint
        working-directory: ${{ inputs.package-path }}
        run: |
          golangci-lint run ./...
      - name: Run go mod tidy check
        working-directory: ${{ inputs.package-path }}
        run: |
          if [[ -f go.mod ]]; then
            go mod tidy
            if [[ -n "$(git status --porcelain go.mod go.sum)" ]]; then
              echo "go.mod or go.sum is not tidy:"
              git diff go.mod go.sum
              exit 1
            fi
          fi
      - name: Run govulncheck
        if: inputs.use-govulncheck
        working-directory: ${{ inputs.package-path }}
        run: |
          govulncheck ./...
      - name: Run additional security scan with gosec
        if: inputs.use-gosec
        working-directory: ${{ inputs.package-path }}
        run: |
          gosec -fmt sarif -out gosec-results.sarif ./...
      - name: Upload gosec results to GitHub Security tab
        if: inputs.use-gosec
        uses: github/codeql-action/upload-sarif@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d  # v3.29.5
        with:
          sarif_file: ${{ inputs.package-path }}/gosec-results.sarif
        continue-on-error: true
