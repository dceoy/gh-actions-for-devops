---
name: Formatting for R
on:
  workflow_call:
    inputs:
      package-path:
        required: false
        type: string
        description: Path to an R package or project
        default: .
      r-version:
        required: false
        type: string
        description: R version to use
        default: release
      runs-on:
        required: false
        type: string
        description: Type of machine to run the job on
        default: ubuntu-latest
      r-libs-user:
        required: false
        type: string
        description: R library path
        default: /usr/local/lib/R/site-library
      format-package:
        required: false
        type: boolean
        description: Run package formatting
        default: true
      lint-before-pr:
        required: false
        type: boolean
        description: Run lint before creating a pull request
        default: true
    secrets:
      GH_TOKEN:
        required: false
        description: GitHub token
permissions:
  contents: write
  pull-requests: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  format-and-pr:
    runs-on: ${{ inputs.runs-on }}
    env:
      R_LIBS_USER: ${{ inputs.r-libs-user }}
      LINTR_ERROR_ON_LINT: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ inputs.r-version }}
          use-public-rspm: true
      - name: Install lintr, styler, and packages declared in DESCRIPTION
        if: inputs.format-package
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::lintr, any::styler, local::.
      - name: Install lintr and styler
        if: (! inputs.format-package)
        shell: Rscript {0}
        run: |
          install.packages(pkgs = c('lintr', 'styler'), dependencies = TRUE, clean = TRUE)
      - name: Format the code using styler::style_pkg()
        if: inputs.format-package
        shell: Rscript {0}
        run: |
          styler::style_pkg(path = '${{ inputs.package-path }}')
      - name: Format the code using styler::style_dir()
        if: (! inputs.format-package)
        shell: Rscript {0}
        run: |
          styler::style_dir(path = '${{ inputs.package-path }}')
      - name: Lint the code using lintr::lint_package()
        if: inputs.lint-before-pr && inputs.format-package
        shell: Rscript {0}
        run: |
          lintr::lint_package(path = '${{ inputs.package-path }}')
      - name: Lint the code using lintr::lint_dir()
        if: (! (inputs.lint-before-pr && inputs.format-package))
        shell: Rscript {0}
        run: |
          lintr::lint_dir(path = '${{ inputs.package-path }}')
      - name: Create output parameters
        id: parameters
        env:
          PR_BASE: ${{ github.head_ref || github.ref_name }}
        run: |
          {
            echo 'COMMIT_MESSAGE=Reformat R code using styler'
            echo "PR_BASE=${PR_BASE}"
            echo "PR_BRANCH=automatedpr/${PR_BASE}"
          } >> "${GITHUB_OUTPUT}"
      - name: Detect changed files and create a pull request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          commit-message: ${{ steps.parameters.outputs.COMMIT_MESSAGE }}
          title: ${{ steps.parameters.outputs.COMMIT_MESSAGE }}
          branch: ${{ steps.parameters.outputs.PR_BRANCH }}
          base: ${{ steps.parameters.outputs.PR_BASE }}
          labels: automated pr
          body: |
            This PR contains the following updates:

            - ${{ steps.parameters.outputs.COMMIT_MESSAGE }}

            This PR has been generated by
            [${{ github.workflow_ref }}](https://github.com/${{ github.repository }}/).
          delete-branch: true
          draft: false
