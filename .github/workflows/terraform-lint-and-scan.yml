---
name: Lint and security scan for Terraform
on:
  workflow_call:
    inputs:
      search-path:
        required: false
        type: string
        description: Path to search for files
        default: .
      terraform-version:
        required: false
        type: string
        description: Terraform version to use
        default: latest
      terragrunt-version:
        required: false
        type: string
        description: Terragrunt version to use
        default: null
      terraform-validate:
        required: false
        type: boolean
        description: Validate Terraform code
        default: true
      use-tflint:
        required: false
        type: boolean
        description: Use TFLint linter
        default: true
      use-trivy:
        required: false
        type: boolean
        description: Use Trivy vulnerability scanner
        default: true
      trivy-scanners:
        required: false
        type: string
        description: List of scanners to use
        default: vuln,secret,misconfig
      trivy-severity:
        required: false
        type: string
        description: Severity levels to fail the scan
        default: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
      trivy-ignore-unfixed:
        required: false
        type: boolean
        description: Ignore unpatched/unfixed vulnerabilities
        default: true
      trivy-exit-code:
        required: false
        type: number
        description: Exit code for pre-build scan
        default: 1
      trivy-config:
        required: false
        type: string
        description: Path to a Trivy config file
        default: null
      trivy-timeout:
        required: false
        type: string
        description: Timeout for the Trivy scan
        default: 5m0s
      runs-on:
        required: false
        type: string
        description: GitHub Actions runner to use
        default: ubuntu-latest
    secrets:
      GH_TOKEN:
        required: false
        description: GitHub token
permissions:
  contents: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  lint-and-scan:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd  # v3.1.2
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@acd1575d3c037258ce5b2dd01379dc49ce24c6b7  # v6.2.0
        with:
          tflint_version: latest
      - name: Install Terragrunt
        if: inputs.terragrunt-version != null
        uses: dceoy/setup-terragrunt@a492a472c503fee3076bd39eb85d5fbe37265aca  # v1.0.1
        with:
          terragrunt-version: ${{ inputs.terragrunt-version }}
      - name: Lint the code using terraform fmt
        working-directory: ${{ inputs.search-path }}
        run: |
          terraform fmt -recursive -check .
      - name: Check terragrunt HCL
        if: inputs.terragrunt-version != null
        working-directory: ${{ inputs.search-path }}
        run: >
          terragrunt hclfmt --check --diff
      - name: Lint the code using tflint
        if: inputs.use-tflint
        working-directory: ${{ inputs.search-path }}
        run: |
          tflint --recursive --chdir=.
      - name: Validate the code using terraform validate
        if: inputs.terraform-validate
        working-directory: ${{ inputs.search-path }}
        run: |
          find . -type f -name '*.tf' -exec dirname {} \; \
            | sort -u \
            | xargs -I{} -t bash -c \
              'cd {} && terraform init -backend=false && terraform validate'
      - name: Run Trivy vulnerability scanner in IaC mode
        if: inputs.use-trivy
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8  # 0.33.1
        with:
          scan-type: filesystem
          scan-ref: ${{ inputs.search-path }}
          scanners: ${{ inputs.trivy-scanners }}
          severity: ${{ inputs.trivy-severity }}
          ignore-unfixed: ${{ inputs.trivy-ignore-unfixed }}
          exit-code: ${{ inputs.trivy-exit-code }}
          trivy-config: ${{ inputs.trivy-config }}
          timeout: ${{ inputs.trivy-timeout }}
          format: github
          output: dependency-results.sbom.json
          github-pat: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        env:
          TRIVY_CHECKS_REPOSITORY: public.ecr.aws/aquasecurity/trivy-checks
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
