---
name: Build using PyInstaller
on:
  workflow_call:
    inputs:
      app-script-path:
        required: true
        type: string
        description: Path to a Python script
      python-version:
        required: false
        type: string
        description: Python version to use (not applicable if uv.lock is present)
        default: 3.x
      uv-version:
        required: false
        type: string
        description: Version of uv to use (applicable only if uv.lock is present)
        default: latest
      requirements-txt:
        required: false
        type: string
        description: Path to the requirements.txt file (not applicable if uv.lock is present)
        default: null
      artifact-name:
        required: false
        type: string
        description: Name of the artifact
        default: dist
      artifact-path:
        required: false
        type: string
        description: Path to the artifact
        default: dist
      artifact-retention-days:
        required: false
        type: number
        description: Number of days to retain artifacts
        default: 1
      artifact-overwrite:
        required: false
        type: boolean
        description: Overwrite existing artifacts
        default: true
      runs-on:
        required: false
        type: string
        description: Type of machine to run the job on
        default: windows-latest
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  bundle:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
      - name: Detect uv.lock or poetry.lock
        id: detect-lock-file
        run: |
          if [[ -f uv.lock ]]; then
            echo "lock_file=uv.lock" >> "${GITHUB_OUTPUT}"
          elif [[ -f poetry.lock ]]; then
            echo "lock_file=poetry.lock" >> "${GITHUB_OUTPUT}"
          else
            echo "lock_file=" >> "${GITHUB_OUTPUT}"
          fi
      - name: Set up uv
        if: steps.detect-lock-file.outputs.lock_file == 'uv.lock'
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4  # v6.7.0
        with:
          version: ${{ inputs.uv-version }}
      - name: Install packages using uv
        if: steps.detect-lock-file.outputs.lock_file == 'uv.lock'
        run: |
          uv sync --dev
          uv add --dev PyInstaller
          echo "EXECUTOR=uv run" | tee -a "${GITHUB_ENV}"
      - name: Set up Python
        if: steps.detect-lock-file.outputs.lock_file != 'uv.lock'
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install packages
        if: steps.detect-lock-file.outputs.lock_file != 'uv.lock'
        env:
          LOCK_FILE: ${{ steps.detect-lock-file.outputs.lock_file }}
          REQUIREMENTS_TXT_PATH: ${{ inputs.requirements-txt }}
        run: |
          if [[ "${LOCK_FILE}" == "poetry.lock" ]]; then
            python -m pip install --no-cache-dir poetry
            poetry lock --no-interaction
            poetry add --group=dev --no-interaction PyInstaller
            poetry install --no-interaction
            echo "EXECUTOR=poetry run" | tee -a "${GITHUB_ENV}"
          else
            python -m pip install -U --no-cache-dir pip
            if [[ -n "${REQUIREMENTS_TXT_PATH}" ]]; then
              python -m pip install -U --no-cache-dir -r "${REQUIREMENTS_TXT_PATH}"
            fi
            python -m pip install --no-cache-dir PyInstaller
            echo "EXECUTOR=python -m" | tee -a "${GITHUB_ENV}"
          fi
      - name: Build an executable file
        env:
          APP_SCRIPT_PATH: ${{ inputs.app-script-path }}
        run: >  # zizmor: ignore[template-injection]
          ${{ env.EXECUTOR }} PyInstaller --clean --noconsole --onefile "${APP_SCRIPT_PATH}"
      - name: Upload the artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}
          retention-days: ${{ inputs.artifact-retention-days }}
          overwrite: ${{ inputs.artifact-overwrite }}
