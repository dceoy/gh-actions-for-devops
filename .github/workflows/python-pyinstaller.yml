---
name: Build using PyInstaller
on:
  workflow_call:
    inputs:
      app-script-path:
        required: true
        type: string
        description: Path to a Python script
      python-packages-to-install:
        required: false
        type: string
        description: Python packages to install
        default: null
      runs-on:
        required: false
        type: string
        description: Type of machine to run the job on
        default: windows-latest
      python-version:
        required: false
        type: string
        description: Python version to use
        default: 3.x
      artifact-name:
        required: false
        type: string
        description: Name of the artifact
        default: dist
      artifact-path:
        required: false
        type: string
        description: Path to the artifact
        default: dist
      artifact-retention-days:
        required: false
        type: number
        description: Number of days to retain artifacts
        default: 1
      artifact-overwrite:
        required: false
        type: boolean
        description: Overwrite existing artifacts
        default: true
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  bundle:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install PyInstaller
        run: >
          python -m pip install -U --no-cache-dir pip PyInstaller
      - name: Install Python packages
        if: inputs.python-packages-to-install != null
        env:
          PYTHON_PACHAGES_TO_INSTALL: ${{ inputs.python-packages-to-install }}
        run: >
          python -m pip install -U --no-cache-dir "${PYTHON_PACHAGES_TO_INSTALL}"
      - name: Build an executable file
        env:
          APP_SCRIPT_PATH: ${{ inputs.app-script-path }}
        run: >
          python -m PyInstaller --clean --noconsole --onefile "${APP_SCRIPT_PATH}"
      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}
          retention-days: ${{ inputs.artifact-retention-days }}
          overwrite: ${{ inputs.artifact-overwrite }}
