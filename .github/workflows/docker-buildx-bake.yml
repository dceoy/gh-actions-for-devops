---
name: Docker image build from a bake definition file
on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        description: Image registry to login (e.g., ghcr.io, docker.io)
        default: null
      registry-user:
        required: false
        type: string
        description: Image registry username
        default: ${{ github.repository_owner }}
      bake-source:
        required: false
        type: string
        description: Context to build from
        default: .
      bake-files:
        required: false
        type: string
        description: List of bake definition files
        default: null
      bake-allow:
        required: false
        type: string
        description: List of the resources accessible from build
        default: null
      bake-set:
        required: false
        type: string
        description: List of targets values to override
        default: null
      push:
        required: false
        type: boolean
        description: Push an image to the registry
        default: true
      provenance:
        required: false
        type: boolean
        description: Generate provenance attestation for the build
        default: false
      scan-before-build:
        required: false
        type: boolean
        description: Scan Dockerfile before build
        default: true
      scan-after-build:
        required: false
        type: boolean
        description: Scan the image after build
        default: true
      hadolint-dockerfile:
        required: false
        type: string
        description: Dockerfile name to lint
        default: Dockerfile
      hadolint-failure-threshold:
        required: false
        type: string
        description: Hadolint failure threshold
        default: error
      hadolint-recursive:
        required: false
        type: boolean
        description: Search for Dockerfile recursively from the project root
        default: true
      trivy-scan-ref:
        required: false
        type: string
        description: Scan reference
        default: .
      trivy-scanners:
        required: false
        type: string
        description: List of scanners to use
        default: vuln,secret,misconfig
      trivy-severity:
        required: false
        type: string
        description: Severity levels to fail the scan
        default: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
      trivy-ignore-unfixed:
        required: false
        type: boolean
        description: Ignore unpatched/unfixed vulnerabilities
        default: true
      trivy-filesystem-exit-code:
        required: false
        type: number
        description: Exit code for trivy filesystem
        default: 1
      trivy-image-exit-code:
        required: false
        type: number
        description: Exit code for trivy image
        default: 0
      trivy-config:
        required: false
        type: string
        description: Path to a Trivy config file
        default: null
      trivy-timeout:
        required: false
        type: string
        description: Timeout for the Trivy scan
        default: 5m0s
      image-artifact-name:
        required: false
        type: string
        description: Image tarball artifact name to upload
        default: docker-images
      image-artifact-retention-days:
        required: false
        type: number
        description: Number of days to retain artifacts
        default: 1
      image-artifact-overwrite:
        required: false
        type: boolean
        description: Overwrite existing artifacts
        default: true
      runs-on:
        required: false
        type: string
        description: GitHub Actions runner to use
        default: ubuntu-latest
      timeout-minutes:
        required: false
        type: number
        description: Timeout in minutes for the job
        default: 360
    secrets:
      DOCKER_TOKEN:
        required: false
        description: Registry token
      GH_TOKEN:
        required: false
        description: GitHub token
    outputs:
      bake-metadata-json:
        description: Build result metadata
        value: ${{ jobs.bake.outputs.bake-metadata-json }}
permissions:
  contents: write
  packages: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  prebuild-lint-and-scan:
    if: >
      inputs.scan-before-build
    uses: ./.github/workflows/docker-lint-and-scan.yml
    with:
      hadolint-dockerfile: ${{ inputs.hadolint-dockerfile }}
      hadolint-failure-threshold: ${{ inputs.hadolint-failure-threshold }}
      hadolint-recursive: ${{ inputs.hadolint-recursive }}
      trivy-scan-ref: ${{ inputs.trivy-scan-ref }}
      trivy-scanners: ${{ inputs.trivy-scanners }}
      trivy-severity: ${{ inputs.trivy-severity }}
      trivy-ignore-unfixed: ${{ inputs.trivy-ignore-unfixed }}
      trivy-exit-code: ${{ inputs.trivy-filesystem-exit-code }}
      trivy-config: ${{ inputs.trivy-config }}
      trivy-timeout: ${{ inputs.trivy-timeout }}
      runs-on: ${{ inputs.runs-on }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
  bake:
    if: >
      (! (failure() || cancelled()))
    needs:
      - prebuild-lint-and-scan
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    env:
      IMAGE_TAR: /tmp/${{ inputs.image-artifact-name }}.tar
    outputs:
      bake-metadata-json: ${{ steps.docker-bake.outputs.metadata }}
      image-refs-json: ${{ steps.extract-image-refs.outputs.image_refs_json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to the Docker registry
        if: inputs.registry != null
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry-user }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build an image
        id: docker-bake
        uses: docker/bake-action@v6
        with:
          source: ${{ (! inputs.bake-files) && inputs.bake-source || null }}
          files: ${{ inputs.bake-files }}
          allow: ${{ inputs.bake-allow }}
          set: |
            ${{ inputs.bake-set }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
          pull: true
          push: ${{ inputs.push }}
          load: ${{ ! inputs.push }}
          provenance: ${{ inputs.provenance }}
          github-token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Extract image refs
        id: extract-image-refs
        env:
          BAKE_OUTPUT_METADATA_JSON: ${{ steps.docker-bake.outputs.metadata }}
        run: >
          jq -cr '[.[] | ."image.name"] | "image_refs_json=\(.)"' <<<"${BAKE_OUTPUT_METADATA_JSON}"
          | tee -a "${GITHUB_OUTPUT}"
      - name: Pull Docker images
        if: inputs.push
        env:
          IMAGE_REFS_JSON: ${{ steps.extract-image-refs.outputs.image_refs_json }}
        run: >
          jq -r '.[]' <<<"${IMAGE_REFS_JSON}" | xargs -L1 -t docker pull
      - name: Save the image as a tarball
        env:
          IMAGE_REFS_JSON: ${{ steps.extract-image-refs.outputs.image_refs_json }}
        run: >
          jq -r '.[]' <<<"${IMAGE_REFS_JSON}" | xargs -t docker save -o "${IMAGE_TAR}"
      - name: Upload the image tarball
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.image-artifact-name }}
          path: ${{ env.IMAGE_TAR }}
          retention-days: ${{ inputs.image-artifact-retention-days }}
          overwrite: ${{ inputs.image-artifact-overwrite }}
  postbuild-scan:
    if: >
      inputs.scan-after-build
    needs:
      - bake
    uses: ./.github/workflows/docker-image-scan.yml
    with:
      image-refs-json: ${{ needs.bake.outputs.image-refs-json }}
      image-artifact-name: ${{ inputs.image-artifact-name }}
      trivy-scanners: ${{ inputs.trivy-scanners }}
      trivy-severity: ${{ inputs.trivy-severity }}
      trivy-ignore-unfixed: ${{ inputs.trivy-ignore-unfixed }}
      trivy-exit-code: ${{ inputs.trivy-image-exit-code }}
      trivy-config: ${{ inputs.trivy-config }}
      trivy-timeout: ${{ inputs.trivy-timeout }}
      runs-on: ${{ inputs.runs-on }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
