---
name: Formatter for Python
on:
  workflow_call:
    inputs:
      package-path:
        required: false
        type: string
        description: Path to a Python package or project
        default: .
      python-version:
        required: false
        type: string
        description: Python version to use
        default: 3.x
      runs-on:
        required: false
        type: string
        description: Type of machine to run the job on
        default: ubuntu-latest
      black-options:
        required: false
        type: string
        description: Additional options to pass to black
        default: --exclude=build
      ruff-format-options:
        required: false
        type: string
        description: Additional options to pass to ruff format
        default: --exclude=build --line-length=79
      isort-options:
        required: false
        type: string
        description: Additional options to pass to isort
        default: --skip-glob=build
      flake8-options:
        required: false
        type: string
        description: Additional options to pass to flake8
        default: --exclude=build
      ruff-check-options:
        required: false
        type: string
        description: Additional options to pass to ruff check
        default: --exclude=build
      use-black:
        required: false
        type: boolean
        description: Use black to format the code
        default: false
      pypi-packages:
        required: false
        type: string
        description: Additional packages to install
        default: autopep8 flake8-bugbear flake8-isort pep8-naming
      lint-before-pr:
        required: false
        type: boolean
        description: Run lint before creating a pull request
        default: true
permissions:
  contents: write
  pull-requests: write
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  format-and-pr:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install packages
        run: >
          pip install -U --no-cache-dir black isort ruff
          ${{ inputs.pypi-packages }} ${{ inputs.package-path }}
      - name: Format the code using black
        if: inputs.use-black
        run: >
          black ${{ inputs.black-options }} ${{ inputs.package-path }}
      - name: Format the code using ruff
        if: (! inputs.use-black)
        run: >
          ruff format ${{ inputs.ruff-format-options }} ${{ inputs.package-path }}
      - name: Sort Python import definitions using isort
        run: >
          isort ${{ inputs.isort-options }} ${{ inputs.package-path }}
      - name: Lint the code using flake8
        if: inputs.lint-before-pr
        run: >
          flake8 ${{ inputs.flake8-options }} ${{ inputs.package-path }}
      - name: Lint the code using ruff
        if: inputs.lint-before-pr
        run: >
          ruff check ${{ inputs.ruff-check-options }} ${{ inputs.package-path }}
      - name: Create output parameters
        id: parameters
        run: |
          if [[ ${{ inputs.use-black }} == true ]]; then
            formatters='ruff and isort'
          else
            formatters='black and isort'
          fi
          if [[ -n "${{ github.head_ref }}" ]]; then
            pr_branch="automatedpr/${{ github.head_ref }}"
            pr_base="${{ github.head_ref }}"
          else
            pr_branch="automatedpr/${{ github.ref_name }}"
            pr_base="${{ github.ref_name }}"
          fi
          echo "COMMIT_MESSAGE=Reformat Python code using ${formatters}" >> "${GITHUB_OUTPUT}"
          echo "PR_BRANCH=${pr_branch}" >> "${GITHUB_OUTPUT}"
          echo "PR_BASE=${pr_base}" >> "${GITHUB_OUTPUT}"
      - name: Detect changed files and create a pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ${{ steps.parameters.outputs.COMMIT_MESSAGE }}
          title: ${{ steps.parameters.outputs.COMMIT_MESSAGE }}
          branch: ${{ steps.parameters.outputs.PR_BRANCH }}
          base: ${{ steps.parameters.outputs.PR_BASE }}
          labels: automated pr
          body: |
            This PR contains the following updates:

            - ${{ steps.parameters.outputs.COMMIT_MESSAGE }}

            This PR has been generated by
            [${{ github.workflow_ref }}](https://github.com/${{ github.repository }}/).
          delete-branch: true
          draft: false
